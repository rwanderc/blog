---
layout:      "post"
url:         "/spike-detection-algorithm/"
title:       "Spike detection: Algorithm"
subtitle:    "Simulation and detection of spikes in real time data streams"
date:        "2022-08-26 09:10:00"
author:      "Wander Costa"
header_img:  "/img/post-spikes.png"
thumb_img:   "/img/post-thumb-spikes.jpg"
tags:

- software development
- engineering management
- spikes

---

If you are a "show me code" person, jump directly to the [repository][repository]. Otherwise, enjoy the explanation of
the algorithm.

# Identifying Spikes in Real Time

In real time streams of data, in order to optimize for a quicker response and identification of the potential spikes,
the data needs to be processed while being received, therefore limited to only analysing the data points received
already.

The basic idea of identifying spikes is to read the acceleration of the set, and spotting big variations. And that's why
it's important to keep the focus on the acceleration of the data set, as it will easily show the changes in the tendency
of the data set.

However, how much acceleration change is considered a potential spike or valley spot?

The answer depends on the actual behaviour and tendency of dispersion of the data set. Therefore, it's also important
measure the **Standard Deviation** of the acceleration during a period to define what's acceptable and what's not.

# Detecting spikes

In the simulation below (generated by [spike-generator][spike-generator]), there are 5 spikes/valleys. The algorithm
should be able to capture the first while receiving this specific one during the streaming.

![](/img/spikes-simulator-sampling.png)


[repository]: https://github.com/rwanderc/spikes

[spike-generator]: https://github.com/rwanderc/spikes/tree/main/spikes-generator
