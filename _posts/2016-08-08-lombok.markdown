---
layout:      post
title:       "Lombok Getters and Setters"
subtitle:    "fed up with getters and setters in java?"
description: "Fed up with getters and setters in java?"
date:        2016-08-08 01:56:00
author:      "Wander Costa"
header-img:  "/img/post-bg-lombok.jpg"
thumb-img:   "/img/post-thumb-lombok.jpg"
social-img:  "/img/post-lombok-400x400.jpg"
tags:
- getter
- setter
- productivity
---

If you are a starter developer, this post is for you.

Who has never got fed up with all the generic purpose getters and setters we need to write? Even with the functionalities IDEs provide to automate it, we still have that amount of redundant code written in the classes.<!--more-->

Many years back I found an awesome project for productivity, that uses annotations to create getters and setters in compilation time. That is, you don't need to write them again and will not even see them, but they will be there and working just fine.

This project is called [Lombok][lombok], which is, by the way, the name of an Indonesian island. It was created by [some guys][credits] and licensed under the MIT license. Importing the project is pretty straightforward, using maven or ant. So I will focus on using it. The library is powerful and has many features, but this post aims the very basic use.

## The Data Annotation

The simplest way of populating a class with getters and setters is by using the annotation **@Data** at the class level.

<script src="https://gist.github.com/rwanderc/c52999ee54e4563a60000398ff89b9eb.js"></script>

<script src="https://gist.github.com/rwanderc/9709ba973fe096f68a6b183a975c5e7f.js"></script>

It will not only generate the getters and setters methods of your class but also the methods **equals()**, **hashCode()** and **toString()** automatically.

<script src="https://gist.github.com/rwanderc/56a94ed08b7b62fb2995d14e7a0ded40.js"></script>
<p></p>
<script src="https://gist.github.com/rwanderc/6c3d81a2df1a988f586844cf5e386455.js"></script>

<p></p>
## The Getter and Setter Annotations

It's also possible to choose the methods and attributes to be generated by Lombok, by using the annotations **@Getter** and **@Setter** in the field level, preventing unnecessary fields to be exposed.

<script src="https://gist.github.com/rwanderc/778c9a0373f90c8f38720954b1f154b6.js"></script>


## Conclusion

Easy? I'm pretty sure that, if you didn't know Lombok, you will now start using it, because it's just necessary to increase performance while coding. To know more about the project and its features, please visit their [website][lombok].

Good luck!


[lombok]:https://projectlombok.org
[credits]:https://projectlombok.org/credits.html
[mitlic]:http://www.opensource.org/licenses/mit-license.php
